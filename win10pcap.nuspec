<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>win10pcap</id>
    <version>10.2.5002</version>
    <packageSourceUrl></packageSourceUrl>
    <title>win10pcap (Install)</title>
    <authors>__REPLACE_AUTHORS_OF_SOFTWARE_COMMA_SEPARATED__</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://github.com/gsmitheidw/win10pcap</projectUrl>
    <!--<iconUrl>http://cdn.rawgit.com/__REPLACE_YOUR_REPO__/master/icons/win10pcap.png</iconUrl>-->
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is required for the community feed -->
    <!-- <licenseUrl>Software License Location __REMOVE_OR_FILL_OUT__</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>-->
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <!--<docsUrl>At what url are the software docs located?</docsUrl>-->
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>win10pcap pcap wireshark</tags>
    <summary>Win10Pcap is a new WinPcap-based Ethernet packet capture library.</summary>
    <description>
Unlike original WinPcap, Win10Pcap is compatible with NDIS 6.x driver model to work stably with Windows 10. Win10Pcap also supports capturing IEEE802.1Q VLAN tags. Win10Pcap has the binary-compatibility with the original WinPcap DLLs. You can run Wireshark or other WinPcap-compatible applications with Win10Pcap by simply installing Win10Pcap DLLs, instead of original WinPcap. Win10Pcap is written as a personal project by Daiyuu Nobori, a Ph.D student of Computer Science of University of Tsukuba, Japan. The many parts of Win10Pcap was from WinPcap.
	
### Win10Pcap Features
Win10Pcap has the following features:

- Win10Pcap works stably with Windows 10 on both x86 and x64.
- Win10Pcap is implemented in the NDIS 6.x driver model.
- (The original WinPcap was implemented in the NDIS 5.x driver model.)
- Win10Pcap also works with Windows 8.1, 8, 7, Server 2016, Server 2012 R2, Server 2012 and Server 2008 R2 on both x86 and x64.
- Win10Pcap is open source software under the GPLv2 license.
- Win10Pcap supports capturing IEEE802.1Q VLAN tags.
- Win10Pcap fixed the NICs enumeration bug on original WinPcap.
- WinPcap can enumerate only NICs which were existing on the boot time. Any NICs which are added after the boot time cannot be enumerated.
- Win10Pcap can enumerate all existing NICs correctly, including NICs which are added after the boot time.
- Win10Pcap supports Jumbo Frames up to 10,000 octets.
- Win10Pcap has the binary-compatibility with the original WinPcap DLLs.
- The kernel-mode Win10Pcap device driver has obtained the "Windows 10 Compatible" logo from Microsoft on June 8, 2015.
	</description>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
